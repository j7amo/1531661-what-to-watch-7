{"version":3,"sources":["components/svg-injector/svg-injector.jsx","components/site-logo/site-logo.jsx","const.js","store/action.js","store/api-actions.js","store/selectors.js","components/user-block/user-block.jsx","components/site-logo-footer/site-logo-footer.jsx","components/footer/footer.jsx","components/genres-list/genres-list.jsx","components/film/film.prop.js","components/movie-card/movie-card.jsx","components/movie-list/movie-list.jsx","components/movie-list-by-genre-container/movie-list-by-genre-container.jsx","components/no-such-page/no-such-page.jsx","components/main-page/main-page.jsx","components/toast-message/toast-message.jsx","components/sign-in/sign-in.jsx","components/my-list/my-list.jsx","components/loading-screen/loading-screen.jsx","components/movie-overview/movie-overview.jsx","utils.js","components/movie-details/movie-details.jsx","components/film/review.prop.js","components/review/review.jsx","components/movie-reviews/movie-reviews.jsx","components/movie-tabs/movie-tabs.jsx","components/film/film.jsx","components/rating-star/rating-star.jsx","components/rating-stars/rating-stars.jsx","components/add-review/add-review.jsx","components/player/player.jsx","components/private-route/private-route.jsx","components/app/app.jsx","store/filters-reducer.js","store/movies-reducer.js","store/current-movie-reducer.js","store/auth-reducer.js","store/promo-movie-reducer.js","store/favorite-movies-reducer.js","store/reducer.js","services/api.js","browser-history.js","store/store.js","store/middlewares/redirect.js","index.js"],"names":["SvgInjector","className","xmlns","xmlnsXlink","data-testid","id","viewBox","stroke","strokeWidth","fill","fillRule","points","clipRule","d","fillOpacity","SiteLogo","to","AppRoute","MovieRating","MovieRatingLimit","STARS_COUNT","ALL_GENRES","SECONDS_IN_HOUR","FavoriteStatus","RequestStatus","RequestResult","AuthorizationStatus","APIRoute","ToastErrorMessage","ActionType","setAuthorizationStatus","status","type","payload","redirectToRoute","url","adaptMovieDataToClient","dataFromServer","adaptedMovie","backgroundColor","backgroundImage","isFavorite","posterImage","previewImage","previewVideoLink","runTime","scoresCount","videoLink","background_color","background_image","is_favorite","poster_image","preview_image","preview_video_link","run_time","scores_count","video_link","fetchFavoriteMoviesData","dispatch","_getState","api","get","then","movies","data","map","movie","catch","err","postFavoriteMovieStatus","post","fetchCurrentMovieData","Promise","all","movieData","setCurrentMovieData","error","message","postComment","rating","comment","setCommentPostData","setCommentPostError","getCurrentGenre","state","filters","currentGenre","getPromoMovieRequestResult","promoMovie","requestResult","getPromoMovieID","getPromoMovieName","name","getPromoMovieGenre","genre","getPromoMovieReleasedDate","released","getPromoMovieBackgroundImage","getPromoMoviePosterImage","getMovies","getMoviesRequestStatus","requestStatus","getMoviesByGenre","createSelector","filter","getUniqueGenres","Array","from","Set","slice","getMovieByID","find","getCurrentMovie","currentMovie","getCurrentMovieID","getCurrentMovieRequestStatus","currentMovieRequestStatus","getCurrentMovieRequestResult","currentMovieRequestResult","getCurrentMovieCommentPostError","commentPostError","getCurrentSimilarMovies","currentSimilarMovies","similarMovies","currentMovieID","similarMovie","getCurrentComments","currentComments","getCommentPostRequestStatus","commentPostRequestStatus","getAuthorizationStatus","authorizationStatus","getFavoriteMovies","favoriteMovies","getFavoriteMoviesRequestResult","getIsFavoriteMovie","ConnectedUserBlock","connect","onSignOutClick","delete","localStorage","removeItem","handleOnClick","useCallback","evt","preventDefault","src","alt","width","height","onClick","SiteLogoFooter","Footer","ConnectedGenresList","uniqueGenres","onFilterClick","target","matches","textContent","props","href","PropTypes","shape","string","description","director","number","bool","starring","arrayOf","ConnectedMovieCard","ownProps","movieID","movieByID","isPlaying","handleMouseOver","handleMouseLeave","onMouseOver","onMouseLeave","muted","autoPlay","ConnectedMovieList","useState","activeMovieID","setActiveMovieID","setIsPlaying","renderedMoviesLimit","setRenderedMoviesLimit","isInitialMount","useRef","useEffect","current","timerID","setTimeout","clearTimeout","length","ConnectedMovieListByGenreContainer","moviesByGenre","ConnectedNoSuchPage","onMainClick","ConnectedMainPage","promoMovieRequestResult","moviesRequestResult","onMyListClick","onMainPageComponentLayoutRendered","Fragment","xlinkHref","memo","ToastMessage","includes","showToast","setShowToast","ConnectedSignIn","onSubmit","credentials","email","password","setItem","token","signIn","passwordError","setPasswordError","loginRef","passwordRef","action","value","replaceAll","ref","placeholder","htmlFor","ConnectedMyList","favoriteMovieRequestResult","LoadingScreen","getMovieRatingLevel","MovieOverview","join","getFormattedMovieRuntime","runtime","fullHours","Math","floor","leftMinutes","getFormattedDate","dateInISOStringFormat","date","Date","toLocaleString","month","getDay","getFullYear","MovieDetails","user","Review","review","dateTime","MovieReviews","reviews","currentReviewsLeft","round","currentReviewsRight","currentReview","MovieTab","getComponentByCurrentTab","tab","ConnectedMovieTabs","currentTab","setCurrentTab","ConnectedFilm","isLoading","loadingResult","onFilmComponentLayoutRendered","useParams","Number","RatingStar","index","isChecked","isDisabled","defaultChecked","disabled","RatingStars","ratingStars","handleRatingStarsChange","onChange","_","i","nanoid","ConnectedAddReview","onFormSubmitClick","commentData","onPageLeave","setRatingStars","reviewText","setReviewText","isSubmitting","setIsSubmitting","minLength","maxLength","required","getFormattedTime","time","fullHoursFormatted","fullMinutesFormatted","fullSecondsFormatted","fullMinutes","fullSeconds","ConnectedPlayer","onExitClick","setIsLoading","currentProgress","setCurrentProgress","timeRemaining","setTimeRemaining","isControlsVisible","setIsControlsVisible","isFullScreen","setIsFullScreen","videoRef","containerRef","onloadeddata","readyState","onplay","onpause","play","pause","timeOut","window","onmousemove","poster","onTimeUpdate","currentTime","duration","max","style","left","element","fullscreenElement","document","exitFullscreen","webkitCancelFullScreen","requestFullscreen","webkitRequestFullScreen","ConnectedPrivateRoute","path","exact","render","routeProps","ConnectedApp","history","push","initialState","currentMovieError","commentPostRequestResult","favoriteMovieRequestStatus","favoriteMovieError","rootReducer","combineReducers","favoriteMovie","HttpCode","getItem","browserHistory","createBrowserHistory","onUnauthorized","axios","create","baseURL","timeout","headers","interceptors","request","use","config","reject","response","createApi","store","createStore","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","_store","next","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6799fe8f.chunk.js","sourcesContent":["import React from 'react';\n\nfunction SvgInjector() {\n\n  return (\n    <div className=\"visually-hidden\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" data-testid=\"symbols\">\n        <symbol id=\"add\" viewBox=\"0 0 19 20\">\n          <title>+</title>\n          <desc>Created with Sketch.</desc>\n          <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n            <polygon id=\"+\" fill=\"#EEE5B5\" points=\"10.777832 11.2880859 10.777832 19.5527344 8.41650391 19.5527344 8.41650391 11.2880859 0.627929688 11.2880859 0.627929688 8.92675781 8.41650391 8.92675781 8.41650391 0.662109375 10.777832 0.662109375 10.777832 8.92675781 18.5664062 8.92675781 18.5664062 11.2880859\"/>\n          </g>\n        </symbol>\n        <symbol id=\"full-screen\" viewBox=\"0 0 27 27\">\n          <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M23.8571 0H16V3.14286H23.8571V11H27V3.14286V0H23.8571Z\" fill=\"#FFF9D9\" fillOpacity=\"0.7\"/>\n          <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M27 23.8571V16H23.8571V23.8571H16V27H23.8571H27L27 23.8571Z\" fill=\"#FFF9D9\" fillOpacity=\"0.7\"/>\n          <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0 3.14286L0 11H3.14286L3.14286 3.14286L11 3.14286V0H3.14286H0L0 3.14286Z\" fill=\"#FFF9D9\" fillOpacity=\"0.7\"/>\n          <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M3.14286 27H11V23.8571H3.14286L3.14286 16H0L0 23.8571V27H3.14286Z\" fill=\"#FFF9D9\" fillOpacity=\"0.7\"/>\n        </symbol>\n        <symbol id=\"in-list\" viewBox=\"0 0 18 14\">\n          <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M2.40513 5.35353L6.1818 8.90902L15.5807 0L18 2.80485L6.18935 14L0 8.17346L2.40513 5.35353Z\" fill=\"#EEE5B5\"/>\n        </symbol>\n        <symbol id=\"pause\" viewBox=\"0 0 14 21\">\n          <symbol id=\"play-s\" viewBox=\"0 0 19 19\">\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0 0L19 9.5L0 19V0Z\" fill=\"#EEE5B5\"/>\n          </symbol>\n          <title>Artboard</title>\n          <desc>Created with Sketch.</desc>\n          <g id=\"Artboard\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n            <polygon id=\"Line\" fill=\"#EEE5B5\" fillRule=\"nonzero\" points=\"0 -1.11910481e-13 4 -1.11910481e-13 4 21 0 21\"/>\n            <polygon id=\"Line\" fill=\"#EEE5B5\" fillRule=\"nonzero\" points=\"10 -1.11910481e-13 14 -1.11910481e-13 14 21 10 21\"/>\n          </g>\n        </symbol>\n      </svg>\n    </div>\n  );\n}\n\nexport default SvgInjector;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction SiteLogo() {\n\n  return (\n    <div className=\"logo\">\n      <Link to=\"/\" className=\"logo__link\" data-testid=\"site-logo-link\">\n        <span className=\"logo__letter logo__letter--1\">W</span>\n        <span className=\"logo__letter logo__letter--2\">T</span>\n        <span className=\"logo__letter logo__letter--3\">W</span>\n      </Link>\n    </div>\n  );\n}\n\nexport default SiteLogo;\n","export const AppRoute = {\n  SIGN_IN: '/login',\n  MAIN: '/',\n  MY_LIST: '/myList',\n  FILMS: '/films',\n  FILM_WITH_ID: '/films/:id',\n  ADD_REVIEW: '/films/:id/review',\n  PLAYER: '/player/:id',\n};\n\nexport const MovieRating = {\n  BAD: 'Bad',\n  NORMAL: 'Normal',\n  GOOD: 'Good',\n  VERY_GOOD: 'Very good',\n  AWESOME: 'Awesome',\n};\n\nexport const MovieRatingLimit = {\n  BAD_LOWER_LIMIT: 0,\n  BAD_UPPER_LIMIT: 3,\n  NORMAL_LOWER_LIMIT: 3,\n  NORMAL_UPPER_LIMIT: 5,\n  GOOD_LOWER_LIMIT: 5,\n  GOOD_UPPER_LIMIT: 8,\n  VERY_GOOD_LOWER_LIMIT: 8,\n  VERY_GOOD_UPPER_LIMIT: 10,\n  AWESOME_LOWER_LIMIT: 10,\n};\n\nexport const STARS_COUNT = 10;\nexport const ALL_GENRES = 'All genres';\nexport const GENRES_LIMIT = 9;\nexport const MINUTES_IN_HOUR = 60;\nexport const SECONDS_IN_MINUTE = 60;\nexport const SECONDS_IN_HOUR = 3600;\n\nexport const FavoriteStatus = {\n  ADDED_TO_FAVORITES: 1,\n  REMOVED_FROM_FAVORITES: 0,\n};\n\nexport const RequestStatus = {\n  IDLE: 'idle',\n  LOADING: 'loading',\n};\n\nexport const RequestResult = {\n  SUCCEEDED: 'succeeded',\n  FAILED: 'failed',\n};\n\nexport const AuthorizationStatus = {\n  AUTH: 'AUTH',\n  NO_AUTH: 'NO_AUTH',\n  UNKNOWN: 'UNKNOWN',\n};\n\nexport const APIRoute = {\n  FILMS: '/films',\n  PROMO: '/promo',\n  FAVORITE: '/favorite',\n  COMMENTS: '/comments',\n  SIGN_IN: '/login',\n  SIGN_OUT: '/logout',\n};\n\nexport const ToastErrorMessage = {\n  REVIEW_ADD_ERROR: 'There was a problem while adding your review. Please check if you specified the rating and your comment has correct length (minimum 50 symbols and 400 symbols maximum)',\n  SIGN_IN_PASSWORD_ERROR: 'There was a problem while signing in. Please check if your password is correct: it cannot be empty or consist only of space characters.',\n};\n","export const ActionType = {\n  SET_CURRENT_GENRE: 'filters/currentGenreSet',\n  BEGIN_MOVIES_DATA_FETCH: 'data/moviesDataFetchBegan',\n  SET_MOVIES_DATA: 'data/moviesDataSet',\n  SET_MOVIES_ERROR: 'data/moviesDataErrorSet',\n  BEGIN_FAVORITE_MOVIES_DATA_FETCH: 'data/favoriteMoviesDataFetchBegan',\n  SET_FAVORITE_MOVIES_DATA: 'data/favoriteMoviesDataSet',\n  SET_FAVORITE_MOVIES_ERROR: 'data/favoriteMoviesDataErrorSet',\n  BEGIN_FAVORITE_MOVIE_STATUS_POST: 'data/favoriteMovieStatusPostBegan',\n  SET_FAVORITE_MOVIE_STATUS_POST_DATA: 'data/favoriteMovieStatusPostDataSet',\n  SET_FAVORITE_MOVIE_STATUS_POST_ERROR: 'data/favoriteMovieStatusPostErrorSet',\n  BEGIN_PROMO_MOVIE_DATA_FETCH: 'data/promoMovieDataFetchBegan',\n  SET_PROMO_MOVIE_DATA: 'data/promoMovieDataSet',\n  SET_PROMO_MOVIE_ERROR: 'data/promoMovieDataErrorSet',\n  BEGIN_CURRENT_MOVIE_DATA_FETCH: 'data/currentMovieDataFetchBegan',\n  SET_CURRENT_MOVIE_DATA: 'data/currentMovieDataSet',\n  SET_CURRENT_MOVIE_ERROR: 'data/currentMovieErrorSet',\n  CLEAR_CURRENT_MOVIE_ERROR: 'data/currentMovieErrorCleared',\n  BEGIN_COMMENT_POST: 'data/commentPostBegan',\n  SET_COMMENT_POST_DATA: 'data/commentPostDataSet',\n  SET_COMMENT_POST_ERROR: 'data/commentPostErrorSet',\n  CLEAR_COMMENT_POST_ERROR: 'data/commentPostErrorCleared',\n  SET_AUTHORIZATION_STATUS: 'user/authorizationStatusSet',\n  REDIRECT_TO_ROUTE: 'user/redirectedToRoute',\n};\n\nexport function setCurrentGenre(genre) {\n  return {\n    type: ActionType.SET_CURRENT_GENRE,\n    payload: genre,\n  };\n}\n\nexport function beginMoviesDataFetch() {\n  return {\n    type: ActionType.BEGIN_MOVIES_DATA_FETCH,\n  };\n}\n\nexport function setMoviesData(movies) {\n  return {\n    type: ActionType.SET_MOVIES_DATA,\n    payload: movies,\n  };\n}\n\nexport function setMoviesError(error) {\n  return {\n    type: ActionType.SET_MOVIES_ERROR,\n    payload: error,\n  };\n}\n\nexport function beginFavoriteMoviesDataFetch() {\n  return {\n    type: ActionType.BEGIN_FAVORITE_MOVIES_DATA_FETCH,\n  };\n}\n\nexport function setFavoriteMoviesData(movies) {\n  return {\n    type: ActionType.SET_FAVORITE_MOVIES_DATA,\n    payload: movies,\n  };\n}\n\nexport function setFavoriteMoviesError(error) {\n  return {\n    type: ActionType.SET_FAVORITE_MOVIES_ERROR,\n    payload: error,\n  };\n}\n\nexport function beginFavoriteMovieStatusPost() {\n  return {\n    type: ActionType.BEGIN_FAVORITE_MOVIE_STATUS_POST,\n  };\n}\n\nexport function setFavoriteMovieStatusPostData(movie) {\n  return {\n    type: ActionType.SET_FAVORITE_MOVIE_STATUS_POST_DATA,\n    payload: movie,\n  };\n}\n\nexport function setFavoriteMovieStatusPostError(error) {\n  return {\n    type: ActionType.SET_FAVORITE_MOVIE_STATUS_POST_ERROR,\n    payload: error,\n  };\n}\n\nexport function beginPromoMovieDataFetch() {\n  return {\n    type: ActionType.BEGIN_PROMO_MOVIE_DATA_FETCH,\n  };\n}\n\nexport function setPromoMovieData(promoMovie) {\n  return {\n    type: ActionType.SET_PROMO_MOVIE_DATA,\n    payload: promoMovie,\n  };\n}\n\nexport function setPromoMovieError(error) {\n  return {\n    type: ActionType.SET_PROMO_MOVIE_ERROR,\n    payload: error,\n  };\n}\n\nexport function beginCurrentMovieDataFetch() {\n  return {\n    type: ActionType.BEGIN_CURRENT_MOVIE_DATA_FETCH,\n  };\n}\n\nexport function setCurrentMovieData(movieData) {\n  return {\n    type: ActionType.SET_CURRENT_MOVIE_DATA,\n    payload: movieData,\n  };\n}\n\nexport function setCurrentMovieError(error) {\n  return {\n    type: ActionType.SET_CURRENT_MOVIE_ERROR,\n    payload: error,\n  };\n}\n\nexport function clearCurrentMovieError() {\n  return {\n    type: ActionType.CLEAR_CURRENT_MOVIE_ERROR,\n  };\n}\n\nexport function beginCommentPost() {\n  return {\n    type: ActionType.BEGIN_COMMENT_POST,\n  };\n}\n\nexport function setCommentPostData(data) {\n  return {\n    type: ActionType.SET_COMMENT_POST_DATA,\n    payload: data,\n  };\n}\n\nexport function setCommentPostError(err) {\n  return {\n    type: ActionType.SET_COMMENT_POST_ERROR,\n    payload: err,\n  };\n}\n\nexport function clearCommentPostError() {\n  return {\n    type: ActionType.CLEAR_COMMENT_POST_ERROR,\n  };\n}\n\nexport function setAuthorizationStatus(status) {\n  return {\n    type: ActionType.SET_AUTHORIZATION_STATUS,\n    payload: status,\n  };\n}\n\nexport function redirectToRoute(url) {\n  return {\n    type: ActionType.REDIRECT_TO_ROUTE,\n    payload: url,\n  };\n}\n","import {APIRoute, AppRoute, AuthorizationStatus} from '../const.js';\nimport {\n  beginMoviesDataFetch,\n  setMoviesData,\n  beginCurrentMovieDataFetch,\n  setCurrentMovieData,\n  setAuthorizationStatus,\n  redirectToRoute,\n  setCurrentMovieError,\n  setMoviesError,\n  setCommentPostData,\n  setCommentPostError,\n  beginCommentPost,\n  beginPromoMovieDataFetch,\n  setPromoMovieError,\n  setPromoMovieData,\n  beginFavoriteMoviesDataFetch,\n  setFavoriteMoviesData,\n  setFavoriteMoviesError,\n  beginFavoriteMovieStatusPost,\n  setFavoriteMovieStatusPostData,\n  setFavoriteMovieStatusPostError\n} from './action.js';\n\nexport const adaptMovieDataToClient = (dataFromServer) => {\n\n  const adaptedMovie = {\n    ...dataFromServer,\n    backgroundColor: dataFromServer['background_color'],\n    backgroundImage: dataFromServer['background_image'],\n    isFavorite: dataFromServer['is_favorite'],\n    posterImage: dataFromServer['poster_image'],\n    previewImage: dataFromServer['preview_image'],\n    previewVideoLink: dataFromServer['preview_video_link'],\n    runTime: dataFromServer['run_time'],\n    scoresCount: dataFromServer['scores_count'],\n    videoLink: dataFromServer['video_link'],\n  };\n\n  delete adaptedMovie.background_color;\n  delete adaptedMovie.background_image;\n  delete adaptedMovie.is_favorite;\n  delete adaptedMovie.poster_image;\n  delete adaptedMovie.preview_image;\n  delete adaptedMovie.preview_video_link;\n  delete adaptedMovie.run_time;\n  delete adaptedMovie.scores_count;\n  delete adaptedMovie.video_link;\n\n  return adaptedMovie;\n};\n\nexport const fetchMoviesData = () => (dispatch, _getState, api) => {\n  dispatch(beginMoviesDataFetch());\n  return api.get(APIRoute.FILMS)\n    .then(({data}) => dispatch(setMoviesData(data.map((movie) => adaptMovieDataToClient(movie)))))\n    .catch((err) => dispatch(setMoviesError(err.message)));\n};\n\nexport const fetchPromoMovieData = () => (dispatch, _getState, api) => {\n  dispatch(beginPromoMovieDataFetch());\n  return api.get(APIRoute.PROMO)\n    .then(({data}) => dispatch(setPromoMovieData(adaptMovieDataToClient(data))))\n    .catch((err) => dispatch(setPromoMovieError(err)));\n};\n\nexport const fetchFavoriteMoviesData = () => (dispatch, _getState, api) => {\n  dispatch(beginFavoriteMoviesDataFetch());\n  return api.get(APIRoute.FAVORITE)\n    .then(({data}) => dispatch(setFavoriteMoviesData(data.map((movie) => adaptMovieDataToClient(movie)))))\n    .catch((err) => dispatch(setFavoriteMoviesError(err)));\n};\n\nexport const postFavoriteMovieStatus = (id, status) => (dispatch, _getState, api) => {\n  dispatch(beginFavoriteMovieStatusPost());\n  return api.post(`${APIRoute.FAVORITE}/${id}/${status}`)\n    .then(({data}) => dispatch(setFavoriteMovieStatusPostData(adaptMovieDataToClient(data))))\n    .catch((err) => dispatch(setFavoriteMovieStatusPostError(err)));\n};\n\nexport const fetchCurrentMovieData = (id) => (dispatch, _getState, api) => {\n  dispatch(beginCurrentMovieDataFetch());\n  return Promise.all([\n    api.get(`${APIRoute.FILMS}/${id}`).then(({data}) => data),\n    api.get(`${APIRoute.FILMS}/${id}/similar`).then(({data}) => data),\n    api.get(`${APIRoute.COMMENTS}/${id}`).then(({data}) => data),\n  ]).then((movieData) => dispatch(setCurrentMovieData(movieData)))\n    .catch((err) => dispatch(setCurrentMovieError(err.message)));\n};\n\nexport const checkAuthorization = () => (dispatch, _getState, api) => (\n  api.get(APIRoute.SIGN_IN)\n    .then(() => dispatch(setAuthorizationStatus(AuthorizationStatus.AUTH)))\n    .catch(() => {})\n);\n\nexport const signIn = ({email, password}) => (dispatch, _getState, api) => (\n  api.post(APIRoute.SIGN_IN, {email, password})\n    .then(({data}) => localStorage.setItem('token', data.token))\n    .then(() => dispatch(setAuthorizationStatus(AuthorizationStatus.AUTH)))\n    .then(() => dispatch(redirectToRoute(AppRoute.MAIN)))\n);\n\nexport const signOut = () => (dispatch, _getState, api) => (\n  api.delete(APIRoute.SIGN_OUT)\n    .then(() => localStorage.removeItem('token'))\n    .then(() => dispatch(setAuthorizationStatus(AuthorizationStatus.NO_AUTH)))\n    .then(() => dispatch(redirectToRoute(AppRoute.MAIN)))\n);\n\nexport const postComment = ({id, rating, comment}) => (dispatch, _getState, api) => {\n  dispatch(beginCommentPost());\n  return api.post(`${APIRoute.COMMENTS}/${id}`, {rating, comment})\n    .then(({data}) => dispatch(setCommentPostData(data)))\n    .then(() => dispatch(redirectToRoute(`${AppRoute.FILMS}/${id}`)))\n    .catch((err) => dispatch(setCommentPostError(err)));\n};\n","import { createSelector } from 'reselect';\n\nimport { ALL_GENRES, GENRES_LIMIT } from '../const';\nconst MAX_SIMILAR_MOVIES_NUMBER = 4;\n\nexport const getCurrentGenre = (state) => state.filters.currentGenre;\n\nexport const getPromoMovieRequestResult = (state) => state.promoMovie.requestResult;\n\nexport const getPromoMovieID = (state) => state.promoMovie.promoMovie.id;\n\nexport const getPromoMovieName = (state) => state.promoMovie.promoMovie.name;\n\nexport const getPromoMovieGenre = (state) => state.promoMovie.promoMovie.genre;\n\nexport const getPromoMovieReleasedDate = (state) => state.promoMovie.promoMovie.released;\n\nexport const getPromoMovieBackgroundImage = (state) => state.promoMovie.promoMovie.backgroundImage;\n\nexport const getPromoMoviePosterImage = (state) => state.promoMovie.promoMovie.posterImage;\n\nexport const getMovies = (state) => state.movies.movies;\n\nexport const getMoviesRequestStatus = (state) => state.movies.requestStatus;\n\nexport const getMoviesByGenre = createSelector(\n  [getMovies, getCurrentGenre],\n  (movies, currentGenre) => movies.filter((movie) => currentGenre === ALL_GENRES || movie.genre === currentGenre),\n);\n\nexport const getUniqueGenres = createSelector(\n  [getMovies],\n  (movies) => [ALL_GENRES, ...Array.from(new Set(movies.map((movie) => movie.genre))).slice(0, GENRES_LIMIT)],\n);\n\nexport const getMovieByID = (state, id) => state.movies.movies.find((movie) => movie.id === id);\n\nexport const getCurrentMovie = (state) => state.currentMovie.currentMovie;\n\nexport const getCurrentMovieID = (state) => state.currentMovie.currentMovie.id;\n\nexport const getCurrentMovieRequestStatus = (state) => state.currentMovie.currentMovieRequestStatus;\n\nexport const getCurrentMovieRequestResult = (state) => state.currentMovie.currentMovieRequestResult;\n\nexport const getCurrentMovieCommentPostError = (state) => state.currentMovie.commentPostError;\n\nexport const getCurrentSimilarMoviesUnfiltered = (state) => state.currentMovie.currentSimilarMovies;\n\nexport const getCurrentSimilarMovies = createSelector(\n  [getCurrentSimilarMoviesUnfiltered, getCurrentMovieID],\n  (similarMovies, currentMovieID) => similarMovies\n    .filter((similarMovie) => similarMovie.id !== currentMovieID)\n    .slice(0, MAX_SIMILAR_MOVIES_NUMBER),\n);\n\nexport const getCurrentComments = (state) => state.currentMovie.currentComments;\n\nexport const getCommentPostRequestStatus = (state) => state.currentMovie.commentPostRequestStatus;\n\nexport const getAuthorizationStatus = (state) => state.authorizationStatus.status;\n\nexport const getFavoriteMovies = (state) => state.favoriteMovies.favoriteMovies;\n\nexport const getFavoriteMoviesRequestResult = (state) => state.favoriteMovies.requestResult;\n\nexport const getIsFavoriteMovie = (state, id) => {\n  if (state.favoriteMovies.favoriteMovies.find((movie) => movie.id === id)) {\n    return true;\n  }\n\n  return false;\n};\n","import React, {useCallback} from 'react';\nimport { Link } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {AuthorizationStatus} from '../../const.js';\nimport {signOut} from '../../store/api-actions.js';\nimport {getAuthorizationStatus} from '../../store/selectors';\n\nfunction UserBlock({authorizationStatus, onSignOutClick}) {\n\n  const handleOnClick = useCallback((evt) => {\n    evt.preventDefault();\n    onSignOutClick();\n  },[]);\n\n  if(authorizationStatus !== AuthorizationStatus.AUTH) {\n    return (\n      <ul className=\"user-block\">\n        <li className=\"user-block__item\">\n        </li>\n        <li className=\"user-block__item\">\n          <Link to=\"/login\" className=\"user-block__link\">Sign in</Link>\n        </li>\n      </ul>\n    );\n  }\n\n  return (\n    <ul className=\"user-block\">\n      <li className=\"user-block__item\">\n        <div className=\"user-block__avatar\">\n          <Link to=\"/myList\">\n            <img src=\"img/avatar.jpg\" alt=\"User avatar\" width=\"63\" height=\"63\"/>\n          </Link>\n        </div>\n      </li>\n      <li className=\"user-block__item\">\n        <a className=\"user-block__link\" onClick={handleOnClick}>Sign out</a>\n      </li>\n    </ul>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  authorizationStatus: getAuthorizationStatus(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSignOutClick() {\n    dispatch(signOut());\n  },\n});\n\nconst ConnectedUserBlock = connect(mapStateToProps, mapDispatchToProps)(UserBlock);\n\nUserBlock.propTypes = {\n  authorizationStatus: PropTypes.string,\n  onSignOutClick: PropTypes.func,\n};\n\nexport default ConnectedUserBlock;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction SiteLogoFooter() {\n\n  return (\n    <div className=\"logo\">\n      <Link to=\"/\" className=\"logo__link logo__link--light\" data-testid=\"footer-logo-link\">\n        <span className=\"logo__letter logo__letter--1\">W</span>\n        <span className=\"logo__letter logo__letter--2\">T</span>\n        <span className=\"logo__letter logo__letter--3\">W</span>\n      </Link>\n    </div>\n  );\n}\n\nexport default SiteLogoFooter;\n","import React from 'react';\nimport SiteLogoFooter from '../site-logo-footer/site-logo-footer';\n\nfunction Footer() {\n  return (\n    <footer className=\"page-footer\">\n      <SiteLogoFooter />\n\n      <div className=\"copyright\">\n        <p>© 2019 What to watch Ltd.</p>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setCurrentGenre } from '../../store/action.js';\nimport PropTypes from 'prop-types';\nimport { getCurrentGenre, getUniqueGenres } from '../../store/selectors';\n\nfunction GenresList(props) {\n\n  const {currentGenre, uniqueGenres, onFilterClick} = props;\n\n  return (\n    <ul className=\"catalog__genres-list\" onClick={onFilterClick}>\n      {uniqueGenres.map((genre) => (\n        <li key={genre} className={`catalog__genres-item ${currentGenre === genre ? 'catalog__genres-item--active' : ''}`} data-testid=\"unique-genre\">\n          <a href=\"#\" className=\"catalog__genres-link\">{genre}</a>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nGenresList.propTypes = {\n  currentGenre: PropTypes.string,\n  uniqueGenres: PropTypes.arrayOf(PropTypes.string),\n  onFilterClick: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n  currentGenre: getCurrentGenre(state),\n  uniqueGenres: getUniqueGenres(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onFilterClick(evt) {\n    evt.preventDefault();\n    if (evt.target.matches('a')) {\n      dispatch(setCurrentGenre(evt.target.textContent));\n    }\n  },\n});\n\nconst ConnectedGenresList = connect(mapStateToProps, mapDispatchToProps)(GenresList);\n\nexport default ConnectedGenresList;\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.shape({\n  backgroundColor: PropTypes.string,\n  backgroundImage: PropTypes.string,\n  description: PropTypes.string,\n  director: PropTypes.string,\n  genre: PropTypes.string,\n  id: PropTypes.number,\n  isFavorite: PropTypes.bool,\n  name: PropTypes.string,\n  posterImage: PropTypes.string,\n  previewImage: PropTypes.string,\n  previewVideoLink: PropTypes.string,\n  rating: PropTypes.number,\n  released: PropTypes.number,\n  runTime: PropTypes.number,\n  scoresCount: PropTypes.number,\n  starring: PropTypes.arrayOf(PropTypes.string),\n  videoLink: PropTypes.string,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport movieProp from '../film/film.prop.js';\nimport { Link } from 'react-router-dom';\nimport { getMovieByID } from '../../store/selectors';\nimport { connect } from 'react-redux';\n\nfunction MovieCard(props) {\n\n  const { movieID, movieByID, isPlaying, handleMouseOver, handleMouseLeave} = props;\n  const { name, previewImage, previewVideoLink } = movieByID;\n\n  return (\n    <article className=\"small-film-card catalog__films-card\" onMouseOver={() => handleMouseOver(movieByID)} onMouseLeave={() => handleMouseLeave()} data-testid=\"film-card-in-movie-list\">\n      {isPlaying\n        ? <Link to={`/films/${movieID}`}><video src={previewVideoLink} width=\"280\" height=\"175\" muted autoPlay/></Link>\n        :\n        <>\n          <Link to={`/films/${movieID}`}>\n            <div className=\"small-film-card__image\">\n              <img src={previewImage} alt={name} width=\"280\" height=\"175\"/>\n            </div>\n          </Link>\n          <h3 className=\"small-film-card__title\">\n            <Link className=\"small-film-card__link\" to={`/films/${movieID}`}>{name}</Link>\n          </h3>\n        </>}\n    </article>\n  );\n}\n\nMovieCard.propTypes = {\n  movieID: PropTypes.number,\n  movieByID: PropTypes.oneOfType([movieProp]),\n  isPlaying: PropTypes.bool,\n  handleMouseOver: PropTypes.func,\n  handleMouseLeave: PropTypes.func,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const { movieID } = ownProps;\n  return {\n    movieByID: getMovieByID(state, movieID),\n  };\n};\n\nconst ConnectedMovieCard = connect(mapStateToProps)(MovieCard);\n\nexport default ConnectedMovieCard;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport MovieCard from '../movie-card/movie-card';\nimport movieProp from '../film/film.prop.js';\nimport { connect } from 'react-redux';\nimport { getCurrentGenre } from '../../store/selectors';\n\nconst PREVIEW_DELAY = 1000;\nconst MOVIE_RENDER_INITIAL_LIMIT = 8;\nconst MOVIE_RENDER_STEP = 8;\n\nfunction MovieList({movies, currentGenre}) {\n  const [activeMovieID, setActiveMovieID] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [renderedMoviesLimit, setRenderedMoviesLimit] = useState(MOVIE_RENDER_INITIAL_LIMIT);\n  const isInitialMount = useRef(true);\n\n  const handleMouseOver = useCallback((movie) => {\n    setActiveMovieID(movie.id);\n  },[]);\n\n  const handleMouseLeave = useCallback(() => {\n    setActiveMovieID(null);\n  },[]);\n\n  function handleShowMoreClick() {\n    setRenderedMoviesLimit(renderedMoviesLimit + MOVIE_RENDER_STEP);\n  }\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else if (activeMovieID) {\n      const timerID = setTimeout(() => setIsPlaying(true), PREVIEW_DELAY);\n      return () => {\n        setIsPlaying(false);\n        clearTimeout(timerID);\n      };\n    }\n  }, [activeMovieID]);\n\n  useEffect(() => {\n    setRenderedMoviesLimit(MOVIE_RENDER_INITIAL_LIMIT);\n  },[currentGenre]);\n\n  return (\n    <>\n      <div className=\"catalog__films-list\" data-testid=\"movie-list-catalog\">\n        {movies.slice(0, renderedMoviesLimit).map((movie) => (\n          <MovieCard\n            key={movie.id}\n            movieID={movie.id}\n            isPlaying={isPlaying && activeMovieID === movie.id}\n            handleMouseOver={handleMouseOver}\n            handleMouseLeave={handleMouseLeave}\n          />\n        ))}\n      </div>\n      {renderedMoviesLimit < movies.length &&\n      <div className=\"catalog__more\">\n        <button className=\"catalog__button\" type=\"button\" onClick={handleShowMoreClick}>Show more</button>\n      </div>}\n    </>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.oneOfType(\n      [movieProp],\n    )),\n  currentGenre: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  currentGenre: getCurrentGenre(state),\n});\n\nconst ConnectedMovieList = connect(mapStateToProps)(MovieList);\n\nexport default ConnectedMovieList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport movieProp from '../film/film.prop.js';\nimport { connect } from 'react-redux';\nimport { getMoviesByGenre } from '../../store/selectors';\nimport ConnectedMovieList from '../movie-list/movie-list.jsx';\n\nfunction MovieListByGenreContainer({moviesByGenre}) {\n\n  return (\n    <ConnectedMovieList movies={moviesByGenre}/>\n  );\n}\n\nMovieListByGenreContainer.propTypes = {\n  moviesByGenre: PropTypes.arrayOf(\n    PropTypes.oneOfType(\n      [movieProp],\n    )),\n};\n\nconst mapStateToProps = (state) => ({\n  moviesByGenre: getMoviesByGenre(state),\n});\n\nconst ConnectedMovieListByGenreContainer = connect(mapStateToProps)(MovieListByGenreContainer);\n\nexport default ConnectedMovieListByGenreContainer;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport { clearCurrentMovieError } from '../../store/action.js';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\nfunction NoSuchPage({onMainClick}) {\n\n  return (\n    <>\n      <h1>\n        404. Page Not Found\n      </h1>\n      <p>\n        If you entered a web address please check if it was correct. If you are certain that it was correct there might be some server maintenance going on right now.\n      </p>\n      <Link to='/' onClick={onMainClick}>\n        Try to go to main page!\n      </Link>\n    </>\n  );\n}\n\nNoSuchPage.propTypes = {\n  onMainClick: PropTypes.func,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onMainClick() {\n    dispatch(clearCurrentMovieError());\n  },\n});\n\nconst ConnectedNoSuchPage = connect(null, mapDispatchToProps)(NoSuchPage);\n\nexport default ConnectedNoSuchPage;\n","import React, { memo, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport SvgInjector from '../svg-injector/svg-injector';\nimport SiteLogo from '../site-logo/site-logo';\nimport UserBlock from '../user-block/user-block';\nimport Footer from '../footer/footer';\nimport GenresList from '../genres-list/genres-list';\nimport ConnectedMovieListByGenreContainer from '../movie-list-by-genre-container/movie-list-by-genre-container';\nimport { connect } from 'react-redux';\nimport {\n  getAuthorizationStatus,\n  getIsFavoriteMovie, getMoviesRequestStatus,\n  getPromoMovieBackgroundImage,\n  getPromoMovieGenre,\n  getPromoMovieID,\n  getPromoMovieName, getPromoMoviePosterImage,\n  getPromoMovieReleasedDate, getPromoMovieRequestResult\n} from '../../store/selectors';\nimport {fetchFavoriteMoviesData, postFavoriteMovieStatus} from '../../store/api-actions';\nimport {AuthorizationStatus, FavoriteStatus, RequestResult} from '../../const';\nimport NoSuchPage from '../no-such-page/no-such-page';\nimport { Link } from 'react-router-dom';\n\nfunction MainPage(props) {\n\n  const {\n    promoMovieRequestResult,\n    moviesRequestResult,\n    id,\n    name,\n    genre,\n    released,\n    backgroundImage,\n    posterImage,\n    isFavorite,\n    onMyListClick,\n    authorizationStatus,\n    onMainPageComponentLayoutRendered,\n  } = props;\n\n  useEffect(() => {\n    if (authorizationStatus === AuthorizationStatus.AUTH) {\n      onMainPageComponentLayoutRendered();\n    }\n  },[authorizationStatus]);\n\n  if (promoMovieRequestResult === RequestResult.FAILED || moviesRequestResult === RequestResult.FAILED) {\n    return (\n      <NoSuchPage />\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <SvgInjector />\n      <section className=\"film-card\">\n        <div className=\"film-card__bg\">\n          <img src={backgroundImage} alt={name}/>\n        </div>\n\n        <h1 className=\"visually-hidden\">WTW</h1>\n\n        <header className=\"page-header film-card__head\">\n          <SiteLogo />\n          <UserBlock />\n        </header>\n\n        <div className=\"film-card__wrap\">\n          <div className=\"film-card__info\">\n            <div className=\"film-card__poster\">\n              <img src={posterImage} alt={name} width=\"218\" height=\"327\"/>\n            </div>\n\n            <div className=\"film-card__desc\">\n              <h2 className=\"film-card__title\">{name}</h2>\n              <p className=\"film-card__meta\">\n                <span className=\"film-card__genre\">{genre}</span>\n                <span className=\"film-card__year\">{released}</span>\n              </p>\n\n              <div className=\"film-card__buttons\">\n                <Link className=\"btn btn--play film-card__button\" to={`/player/${id}`}>\n                  <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n                    <use xlinkHref=\"#play-s\"/>\n                  </svg>\n                  <span>Play</span>\n                </Link>\n                {authorizationStatus === AuthorizationStatus.AUTH &&\n                <button className=\"btn btn--list film-card__button\" type=\"button\" onClick={() => onMyListClick(id, (isFavorite ? FavoriteStatus.REMOVED_FROM_FAVORITES : FavoriteStatus.ADDED_TO_FAVORITES))}>\n                  {isFavorite\n                    ?\n                    <svg viewBox=\"0 0 18 14\" width=\"18\" height=\"14\">\n                      <use xlinkHref=\"#in-list\"/>\n                    </svg>\n                    :\n                    <svg viewBox=\"0 0 19 20\" width=\"19\" height=\"20\">\n                      <use xlinkHref=\"#add\"/>\n                    </svg>}\n                  <span>My list</span>\n                </button>}\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <div className=\"page-content\">\n        <section className=\"catalog\">\n          <h2 className=\"catalog__title visually-hidden\">Catalog</h2>\n          <GenresList />\n          <ConnectedMovieListByGenreContainer />\n        </section>\n        <Footer />\n      </div>\n    </React.Fragment>\n  );\n}\n\nMainPage.propTypes = {\n  promoMovieRequestResult: PropTypes.string,\n  moviesRequestResult: PropTypes.string,\n  id: PropTypes.number,\n  name: PropTypes.string,\n  genre: PropTypes.string,\n  released: PropTypes.number,\n  backgroundImage: PropTypes.string,\n  posterImage: PropTypes.string,\n  isFavorite: PropTypes.bool,\n  onMyListClick: PropTypes.func,\n  authorizationStatus: PropTypes.string,\n  onMainPageComponentLayoutRendered: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n  promoMovieRequestResult: getPromoMovieRequestResult(state),\n  moviesRequestResult: getMoviesRequestStatus(state),\n  id: getPromoMovieID(state),\n  name: getPromoMovieName(state),\n  genre: getPromoMovieGenre(state),\n  released: getPromoMovieReleasedDate(state),\n  backgroundImage: getPromoMovieBackgroundImage(state),\n  posterImage: getPromoMoviePosterImage(state),\n  isFavorite: getIsFavoriteMovie(state, getPromoMovieID(state)),\n  authorizationStatus: getAuthorizationStatus(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onMyListClick(id, status) {\n    dispatch(postFavoriteMovieStatus(id, status));\n  },\n  onMainPageComponentLayoutRendered() {\n    dispatch(fetchFavoriteMoviesData());\n  },\n});\n\nconst ConnectedMainPage = connect(mapStateToProps, mapDispatchToProps)(MainPage);\n\nexport default memo(ConnectedMainPage);\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { ToastErrorMessage } from '../../const.js';\n\nconst TOAST_DURATION = 30000;\nconst ERROR_CODE = '400';\n\nfunction ToastMessage({message}) {\n\n  if (message.includes(ERROR_CODE)) {\n    message = ToastErrorMessage.REVIEW_ADD_ERROR;\n  }\n  const [showToast, setShowToast] = useState(false);\n\n  useEffect(() => {\n    setShowToast(true);\n    const timerID = setTimeout(() => setShowToast(false), TOAST_DURATION);\n\n    return clearTimeout(timerID);\n  },[]);\n\n  return (\n    <div>\n      {showToast && <p>{message}</p>}\n    </div>\n  );\n}\n\nToastMessage.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default ToastMessage;\n","import React, { useRef, useState } from 'react';\nimport SvgInjector from '../svg-injector/svg-injector';\nimport SiteLogo from '../site-logo/site-logo';\nimport Footer from '../footer/footer';\nimport { signIn } from '../../store/api-actions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ToastMessage from '../toast-message/toast-message';\nimport {AppRoute, AuthorizationStatus, ToastErrorMessage} from '../../const';\nimport {getAuthorizationStatus} from '../../store/selectors';\nimport {Redirect} from 'react-router-dom';\n\nfunction SignIn({onSubmit, authorizationStatus}) {\n\n  const [passwordError, setPasswordError] = useState(false);\n  const loginRef = useRef();\n  const passwordRef = useRef();\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    if (passwordRef.current.value.replaceAll(' ', '').length > 0) {\n      onSubmit({\n        email: loginRef.current.value,\n        password: passwordRef.current.value,\n      });\n    } else {\n      setPasswordError(true);\n    }\n  };\n\n  if (authorizationStatus === AuthorizationStatus.AUTH) {\n    return <Redirect to={AppRoute.MAIN} />;\n  }\n\n  return (\n    <React.Fragment>\n      <SvgInjector />\n      <div className=\"user-page\">\n        <header className=\"page-header user-page__head\">\n          <SiteLogo />\n\n          <h1 className=\"page-title user-page__title\">Sign in</h1>\n        </header>\n\n        <div className=\"sign-in user-page__content\">\n          <form action=\"#\" className=\"sign-in__form\" onSubmit={handleSubmit}>\n            <div className=\"sign-in__fields\">\n              <div className=\"sign-in__field\">\n                <input ref={loginRef} className=\"sign-in__input\" type=\"email\" placeholder=\"Email address\" name=\"user-email\" id=\"user-email\" data-testid=\"email-input\"/>\n                <label className=\"sign-in__label visually-hidden\" htmlFor=\"user-email\">Email address</label>\n              </div>\n              <div className=\"sign-in__field\">\n                <input ref={passwordRef} className=\"sign-in__input\" type=\"password\" placeholder=\"Password\" name=\"user-password\" id=\"user-password\" data-testid=\"password-input\"/>\n                <label className=\"sign-in__label visually-hidden\" htmlFor=\"user-password\">Password</label>\n              </div>\n            </div>\n            <div className=\"sign-in__submit\">\n              <button className=\"sign-in__btn\" type=\"submit\">Sign in</button>\n            </div>\n          </form>\n          {passwordError && <ToastMessage message={ToastErrorMessage.SIGN_IN_PASSWORD_ERROR}/>}\n        </div>\n\n        <Footer />\n      </div>\n    </React.Fragment>\n  );\n}\nconst mapStateToProps = (state) => ({\n  authorizationStatus: getAuthorizationStatus(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit(credentials) {\n    dispatch(signIn(credentials));\n  },\n});\n\nconst ConnectedSignIn = connect(mapStateToProps, mapDispatchToProps)(SignIn);\n\nSignIn.propTypes = {\n  onSubmit: PropTypes.func,\n  authorizationStatus: PropTypes.string,\n};\n\nexport default ConnectedSignIn;\n","import React from 'react';\nimport SvgInjector from '../svg-injector/svg-injector';\nimport SiteLogo from '../site-logo/site-logo';\nimport UserBlock from '../user-block/user-block';\nimport PropTypes from 'prop-types';\nimport MovieList from '../movie-list/movie-list';\nimport Footer from '../footer/footer';\nimport movieProp from '../film/film.prop.js';\nimport { connect } from 'react-redux';\nimport {getFavoriteMovies, getFavoriteMoviesRequestResult} from '../../store/selectors';\nimport {RequestResult} from '../../const';\nimport NoSuchPage from '../no-such-page/no-such-page';\n\nfunction MyList({favoriteMovies, favoriteMovieRequestResult}) {\n\n  if (favoriteMovieRequestResult === RequestResult.FAILED) {\n    return (\n      <NoSuchPage />\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <SvgInjector />\n      <div className=\"user-page\">\n        <header className=\"page-header user-page__head\">\n          <SiteLogo />\n          <h1 className=\"page-title user-page__title\">My list</h1>\n          <UserBlock />\n        </header>\n\n        <section className=\"catalog\" data-testid=\"movie-list\">\n          <h2 className=\"catalog__title visually-hidden\">Catalog</h2>\n          <MovieList movies={favoriteMovies} />\n        </section>\n\n        <Footer />\n      </div>\n    </React.Fragment>\n  );\n}\n\nMyList.propTypes = {\n  favoriteMovies: PropTypes.arrayOf(\n    PropTypes.oneOfType(\n      [movieProp],\n    )),\n  favoriteMovieRequestResult: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  favoriteMovies: getFavoriteMovies(state),\n  favoriteMovieRequestResult: getFavoriteMoviesRequestResult(state),\n});\n\nconst ConnectedMyList = connect(mapStateToProps)(MyList);\n\nexport default ConnectedMyList;\n","import React from 'react';\nimport './loading-screen.css';\n\nfunction LoadingScreen() {\n  return (\n    <div className=\"lds-spinner\" data-testid=\"loading-spinner\">\n      <div/>\n      <div/>\n      <div/>\n      <div/>\n      <div/>\n      <div/>\n      <div/>\n      <div/>\n      <div/>\n      <div/>\n      <div/>\n      <div/>\n    </div>\n  );\n}\n\nexport default LoadingScreen;\n","import React from 'react';\nimport {MovieRating, MovieRatingLimit} from '../../const.js';\nimport PropTypes from 'prop-types';\nimport movieProp from '../film/film.prop';\n\nfunction getMovieRatingLevel(movie) {\n  const rating = movie.rating;\n\n  if (rating >= MovieRatingLimit.BAD_LOWER_LIMIT && rating < MovieRatingLimit.BAD_UPPER_LIMIT) {\n    return MovieRating.BAD;\n  } else if (rating >= MovieRatingLimit.NORMAL_LOWER_LIMIT && rating < MovieRatingLimit.NORMAL_UPPER_LIMIT) {\n    return MovieRating.NORMAL;\n  } else if (rating >= MovieRatingLimit.GOOD_LOWER_LIMIT && rating < MovieRatingLimit.GOOD_UPPER_LIMIT) {\n    return MovieRating.GOOD;\n  } else if (rating >= MovieRatingLimit.VERY_GOOD_LOWER_LIMIT && rating < MovieRatingLimit.VERY_GOOD_UPPER_LIMIT) {\n    return MovieRating.VERY_GOOD;\n  } else if (rating === MovieRatingLimit.AWESOME_LOWER_LIMIT) {\n    return MovieRating.AWESOME;\n  }\n}\n\nfunction MovieOverview({movie}) {\n\n  const {\n    rating,\n    scoresCount,\n    description,\n    director,\n    starring,\n  } = movie;\n\n  return (\n    <>\n      <div className=\"film-rating\">\n        <div className=\"film-rating__score\">{rating}</div>\n        <p className=\"film-rating__meta\">\n          <span className=\"film-rating__level\">{getMovieRatingLevel(movie)}</span>\n          <span className=\"film-rating__count\">{scoresCount} {scoresCount > 1 ? 'ratings' : 'rating'}</span>\n        </p>\n      </div>\n\n      <div className=\"film-card__text\">\n        <p>{description}</p>\n\n        <p className=\"film-card__director\"><strong>Director: {director}</strong></p>\n\n        <p className=\"film-card__starring\">\n          <strong>\n            Starring: {starring.join(', ')} and other\n          </strong>\n        </p>\n      </div>\n    </>\n  );\n}\n\nMovieOverview.propTypes = {\n  movie: PropTypes.oneOfType([movieProp]),\n};\n\nexport default MovieOverview;\n","import {MINUTES_IN_HOUR} from './const';\n\nconst isPositiveNumber = (number) => !isNaN(number) && number >= 0;\n\nexport const getRandomInt = (rangeStart = 0, rangeEnd = 0) => {\n  if (!isPositiveNumber(rangeStart) || !isPositiveNumber(rangeEnd)) {\n    return 0;\n  }\n\n  if (rangeEnd <= rangeStart) {\n    return rangeStart;\n  }\n\n  return Number(rangeStart) + Math.round(Math.random() * (rangeEnd - rangeStart));\n};\n\nexport const getFormattedMovieRuntime = (runtime) => {\n  const fullHours = Math.floor(runtime / MINUTES_IN_HOUR);\n  const leftMinutes = runtime - fullHours * MINUTES_IN_HOUR;\n\n  return `${fullHours}h ${leftMinutes}m`;\n};\n\nexport const getFormattedDate = (dateInISOStringFormat) => {\n  const date = new Date(dateInISOStringFormat);\n\n  return `${date.toLocaleString('en-US', { month: 'long' })} ${date.getDay()}, ${date.getFullYear()}`;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport movieProp from '../film/film.prop';\nimport {getFormattedMovieRuntime} from '../../utils';\n\nfunction MovieDetails({movie}) {\n  const {\n    director,\n    starring,\n    runTime,\n    genre,\n    released,\n  } = movie;\n  return (\n    <div className=\"film-card__text film-card__row\">\n      <div className=\"film-card__text-col\">\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Director</strong>\n          <span className=\"film-card__details-value\">{director}</span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Starring</strong>\n          <span className=\"film-card__details-value\">{starring.join(', ')}</span>\n        </p>\n      </div>\n\n      <div className=\"film-card__text-col\">\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Run Time</strong>\n          <span className=\"film-card__details-value\">{getFormattedMovieRuntime(runTime)}</span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Genre</strong>\n          <span className=\"film-card__details-value\">{genre}</span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Released</strong>\n          <span className=\"film-card__details-value\">{released}</span>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nMovieDetails.propTypes = {\n  movie: PropTypes.oneOfType([movieProp]),\n};\n\nexport default MovieDetails;\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.shape({\n  id: PropTypes.number,\n  user: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n  }),\n  rating: PropTypes.number,\n  comment: PropTypes.string,\n  date: PropTypes.string,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport reviewProp from '../film/review.prop.js';\nimport {getFormattedDate} from '../../utils';\n\nfunction Review({review}) {\n  const {\n    comment,\n    rating,\n    user : {\n      name,\n    },\n    date,\n  } = review;\n\n  return (\n    <div className=\"review\">\n      <blockquote className=\"review__quote\">\n        <p className=\"review__text\">{comment}</p>\n        <footer className=\"review__details\">\n          <cite className=\"review__author\">{name}</cite>\n          <time className=\"review__date\" dateTime={date}>{getFormattedDate(date)}</time>\n        </footer>\n      </blockquote>\n\n      <div className=\"review__rating\">{rating}</div>\n    </div>\n  );\n}\n\nReview.propTypes = {\n  review: PropTypes.oneOfType([reviewProp]),\n};\n\nexport default Review;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport reviewProp from '../film/review.prop.js';\nimport Review from '../review/review.jsx';\n\nfunction MovieReviews({reviews}) {\n  const currentReviewsLeft = reviews.slice(0, Math.round(reviews.length / 2));\n  const currentReviewsRight = reviews.slice(Math.round(reviews.length / 2));\n\n  return (\n    <div className=\"film-card__reviews film-card__row\" data-testid=\"reviews-tab-content\">\n      <div className=\"film-card__reviews-col\">\n        {currentReviewsLeft.map((currentReview) => <Review key={currentReview.id} review={currentReview} />)}\n      </div>\n      <div className=\"film-card__reviews-col\">\n        {currentReviewsRight.map((currentReview) => <Review key={currentReview.id} review={currentReview} />)}\n      </div>\n    </div>\n  );\n}\n\nMovieReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.oneOfType(\n      [reviewProp],\n    )),\n};\n\nexport default MovieReviews;\n","import React, {useState} from 'react';\nimport MovieOverview from '../movie-overview/movie-overview';\nimport MovieDetails from '../movie-details/movie-details';\nimport MovieReviews from '../movie-reviews/movie-reviews';\nimport PropTypes from 'prop-types';\nimport movieProp from '../film/film.prop';\nimport reviewProp from '../film/review.prop';\nimport { getCurrentComments, getCurrentMovie } from '../../store/selectors';\nimport { connect } from 'react-redux';\n\nconst MovieTab = {\n  OVERVIEW: 'Overview',\n  DETAILS: 'Details',\n  REVIEWS: 'Reviews',\n};\n\nfunction getComponentByCurrentTab(tab, movie, reviews) {\n  switch(tab) {\n    case MovieTab.OVERVIEW:\n      return <MovieOverview movie={movie}/>;\n    case MovieTab.DETAILS:\n      return <MovieDetails movie={movie}/>;\n    case MovieTab.REVIEWS:\n      return <MovieReviews reviews={reviews}/>;\n    default:\n      break;\n  }\n}\n\n\nfunction MovieTabs({currentMovie, currentComments}) {\n  const [currentTab, setCurrentTab] = useState(MovieTab.OVERVIEW);\n\n  function handleTabClick(evt) {\n    evt.preventDefault();\n    if (evt.target.matches('a')) {\n      switch(evt.target.textContent) {\n        case MovieTab.OVERVIEW:\n          setCurrentTab(MovieTab.OVERVIEW);\n          break;\n        case MovieTab.DETAILS:\n          setCurrentTab(MovieTab.DETAILS);\n          break;\n        case MovieTab.REVIEWS:\n          setCurrentTab(MovieTab.REVIEWS);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  return (\n    <div className='film-card__desc'>\n      <nav className='film-nav film-card__nav'>\n        <ul className='film-nav__list' onClick={handleTabClick}>\n          <li className={`film-nav__item ${currentTab === MovieTab.OVERVIEW ? 'film-nav__item--active' : ''}`}>\n            <a href='#' className='film-nav__link'>Overview</a>\n          </li>\n          <li className={`film-nav__item ${currentTab === MovieTab.DETAILS ? 'film-nav__item--active' : ''}`}>\n            <a href='#' className='film-nav__link'>Details</a>\n          </li>\n          <li className={`film-nav__item ${currentTab === MovieTab.REVIEWS ? 'film-nav__item--active' : ''}`}>\n            <a href='#' className='film-nav__link'>Reviews</a>\n          </li>\n        </ul>\n      </nav>\n      {getComponentByCurrentTab(currentTab, currentMovie, currentComments)}\n    </div>\n  );\n}\n\nMovieTabs.propTypes = {\n  currentMovie: PropTypes.oneOfType([movieProp]).isRequired,\n  currentComments: PropTypes.arrayOf(\n    PropTypes.oneOfType(\n      [reviewProp],\n    )),\n};\n\nconst mapStateToProps = (state) => ({\n  currentMovie: getCurrentMovie(state),\n  currentComments: getCurrentComments(state),\n});\n\nconst ConnectedMovieTabs = connect(mapStateToProps)(MovieTabs);\n\nexport default ConnectedMovieTabs;\n","import React, { useEffect } from 'react';\nimport SvgInjector from '../svg-injector/svg-injector';\nimport SiteLogo from '../site-logo/site-logo';\nimport UserBlock from '../user-block/user-block';\nimport { Link, useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MovieList from '../movie-list/movie-list';\nimport Footer from '../footer/footer';\nimport { connect } from 'react-redux';\nimport {AuthorizationStatus, FavoriteStatus, RequestResult, RequestStatus} from '../../const';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport NoSuchPage from '../no-such-page/no-such-page';\nimport movieProp from '../film/film.prop.js';\nimport {fetchCurrentMovieData, postFavoriteMovieStatus} from '../../store/api-actions';\nimport {\n  getAuthorizationStatus,\n  getCurrentMovie,\n  getCurrentMovieID,\n  getCurrentMovieRequestResult,\n  getCurrentMovieRequestStatus,\n  getCurrentSimilarMovies,\n  getIsFavoriteMovie\n} from '../../store/selectors';\nimport ConnectedMovieTabs from '../movie-tabs/movie-tabs';\n\nfunction Film(props) {\n\n  const {\n    isLoading,\n    loadingResult,\n    currentMovie,\n    currentSimilarMovies,\n    authorizationStatus,\n    isFavorite,\n    onFilmComponentLayoutRendered,\n    onMyListClick,\n  } = props;\n\n  const { id } = useParams();\n\n  const {\n    name,\n    posterImage,\n    backgroundImage,\n    genre,\n    released,\n  } = currentMovie;\n\n  useEffect(() => {\n    if (currentMovie.id !== Number(id) && isLoading !== RequestStatus.LOADING && loadingResult !== RequestResult.FAILED) {\n      onFilmComponentLayoutRendered(id);\n    }\n  });\n\n\n  if (isLoading === RequestStatus.LOADING) {\n    return (\n      <LoadingScreen />\n    );\n  }\n\n  if (loadingResult === RequestResult.FAILED) {\n    return (\n      <NoSuchPage />\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <SvgInjector />\n      <section className=\"film-card film-card--full\">\n        <div className=\"film-card__hero\">\n          <div className=\"film-card__bg\">\n            <img src={backgroundImage} alt={name}/>\n          </div>\n\n          <h1 className=\"visually-hidden\">WTW</h1>\n\n          <header className=\"page-header film-card__head\">\n            <SiteLogo />\n            <UserBlock />\n          </header>\n\n          <div className=\"film-card__wrap\">\n            <div className=\"film-card__desc\">\n              <h2 className=\"film-card__title\">{name}</h2>\n              <p className=\"film-card__meta\">\n                <span className=\"film-card__genre\">{genre}</span>\n                <span className=\"film-card__year\">{released}</span>\n              </p>\n\n              <div className=\"film-card__buttons\">\n                <Link className=\"btn btn--play film-card__button\" to={`/player/${id}`}>\n                  <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n                    <use xlinkHref=\"#play-s\"/>\n                  </svg>\n                  <span>Play</span>\n                </Link>\n                {authorizationStatus === AuthorizationStatus.AUTH &&\n                <>\n                  <button className=\"btn btn--list film-card__button\" type=\"button\" onClick={() => onMyListClick(id, (isFavorite ? FavoriteStatus.REMOVED_FROM_FAVORITES : FavoriteStatus.ADDED_TO_FAVORITES))}>\n                    {isFavorite\n                      ?\n                      <svg viewBox=\"0 0 18 14\" width=\"18\" height=\"14\">\n                        <use xlinkHref=\"#in-list\"/>\n                      </svg>\n                      :\n                      <svg viewBox=\"0 0 19 20\" width=\"19\" height=\"20\">\n                        <use xlinkHref=\"#add\"/>\n                      </svg>}\n                    <span>My list</span>\n                  </button>\n                  <Link to={`/films/${id}/review`} className=\"btn film-card__button\">Add review</Link>\n                </>}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"film-card__wrap film-card__translate-top\">\n          <div className=\"film-card__info\">\n            <div className=\"film-card__poster film-card__poster--big\">\n              <img src={posterImage} alt={`${name} poster`} width=\"218\" height=\"327\"/>\n            </div>\n\n            <ConnectedMovieTabs />\n          </div>\n        </div>\n      </section>\n\n      <div className=\"page-content\">\n        <section className=\"catalog catalog--like-this\">\n          <h2 className=\"catalog__title\">More like this</h2>\n          <MovieList movies={currentSimilarMovies} />\n        </section>\n\n        <Footer />\n      </div>\n    </React.Fragment>\n  );\n}\n\nFilm.propTypes = {\n  isLoading: PropTypes.string,\n  loadingResult: PropTypes.string,\n  currentMovie: PropTypes.oneOfType([movieProp]),\n  currentSimilarMovies: PropTypes.arrayOf(PropTypes.oneOfType([movieProp])),\n  authorizationStatus: PropTypes.string,\n  isFavorite: PropTypes.bool,\n  onFilmComponentLayoutRendered: PropTypes.func,\n  onMyListClick: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n  isLoading: getCurrentMovieRequestStatus(state),\n  loadingResult: getCurrentMovieRequestResult(state),\n  currentMovie: getCurrentMovie(state),\n  currentSimilarMovies: getCurrentSimilarMovies(state),\n  authorizationStatus: getAuthorizationStatus(state),\n  isFavorite: getIsFavoriteMovie(state, getCurrentMovieID(state)),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onFilmComponentLayoutRendered(id) {\n    dispatch(fetchCurrentMovieData(id));\n  },\n  onMyListClick(id, status) {\n    dispatch(postFavoriteMovieStatus(id, status));\n  },\n});\n\nconst ConnectedFilm = connect(mapStateToProps, mapDispatchToProps)(Film);\n\nexport default ConnectedFilm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { STARS_COUNT} from '../../const.js';\n\nfunction RatingStar({index, isChecked, isDisabled}) {\n\n  return (\n    <React.Fragment>\n      <input className=\"rating__input\" id={`star-${STARS_COUNT - index}`} type=\"radio\" name=\"rating\" value={STARS_COUNT - index} defaultChecked={isChecked} disabled={isDisabled} data-testid={`star-${STARS_COUNT - index}`}/>\n      <label className=\"rating__label\" htmlFor={`star-${STARS_COUNT - index}`}>Rating {STARS_COUNT - index}</label>\n    </React.Fragment>\n  );\n}\n\nRatingStar.propTypes = {\n  index: PropTypes.number,\n  isChecked: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n};\n\nexport default RatingStar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport RatingStar from '../rating-star/rating-star';\nimport { STARS_COUNT } from '../../const.js';\nimport { nanoid } from 'nanoid';\n\nfunction RatingStars({ratingStars, handleRatingStarsChange, isDisabled}) {\n\n  return (\n    <div className=\"rating__stars\" onChange={handleRatingStarsChange}>\n      {new Array(STARS_COUNT).fill('').map((_,i) => (\n        <RatingStar key={nanoid()} index={i} isChecked={ratingStars === STARS_COUNT - i} isDisabled={isDisabled}/>\n      ))}\n    </div>\n  );\n}\n\nRatingStars.propTypes = {\n  ratingStars: PropTypes.number,\n  handleRatingStarsChange: PropTypes.func,\n  isDisabled: PropTypes.bool,\n};\n\nexport default RatingStars;\n","import React, { useEffect, useRef, useState } from 'react';\nimport SvgInjector from '../svg-injector/svg-injector.jsx';\nimport SiteLogo from '../site-logo/site-logo.jsx';\nimport UserBlock from '../user-block/user-block.jsx';\nimport { Link, useParams } from 'react-router-dom';\nimport PropTypes, { string } from 'prop-types';\nimport movieProp from '../film/film.prop.js';\nimport RatingStars from '../rating-stars/rating-stars.jsx';\nimport { RequestStatus } from '../../const.js';\nimport ToastMessage from '../toast-message/toast-message.jsx';\nimport { postComment } from '../../store/api-actions.js';\nimport { connect } from 'react-redux';\nimport {clearCommentPostError} from '../../store/action.js';\nimport {getCommentPostRequestStatus, getCurrentMovieCommentPostError, getMovies} from '../../store/selectors';\n\nconst MIN_COMMENT_LENGTH = 50;\nconst MAX_COMMENT_LENGTH = 400;\n\nfunction AddReview({isLoading, onPageLeave, movies, error, onFormSubmitClick}) {\n\n  const { id } = useParams();\n  const [ratingStars, setRatingStars] = useState(0);\n  const [reviewText, setReviewText] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { name, backgroundImage, posterImage } = movies.find((movie) => movie.id === Number(id));\n  const isInitialMount = useRef(true);\n  const isDisabled = isLoading === RequestStatus.LOADING || ratingStars === 0 || reviewText.length < MIN_COMMENT_LENGTH || reviewText.length > MAX_COMMENT_LENGTH;\n\n  function handleRatingStarsChange(evt) {\n    evt.preventDefault();\n    setRatingStars(Number(evt.target.value));\n  }\n\n  function handleReviewTextChange(evt) {\n    evt.preventDefault();\n    setReviewText(evt.target.value);\n  }\n\n  function handleCommentSubmit(evt) {\n    evt.preventDefault();\n    setIsSubmitting(true);\n  }\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else if (isSubmitting) {\n      onFormSubmitClick({id, rating: ratingStars, comment: reviewText});\n    }\n\n    return () => {\n      setIsSubmitting(false);\n    };\n  });\n\n  useEffect(() => {\n    onPageLeave();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <SvgInjector />\n      <section className=\"film-card film-card--full\">\n        <div className=\"film-card__header\">\n          <div className=\"film-card__bg\">\n            <img src={backgroundImage} alt={name}/>\n          </div>\n\n          <h1 className=\"visually-hidden\">WTW</h1>\n\n          <header className=\"page-header\">\n            <SiteLogo />\n\n            <nav className=\"breadcrumbs\">\n              <ul className=\"breadcrumbs__list\">\n                <li className=\"breadcrumbs__item\">\n                  <Link to={`/films/${id}`} className=\"breadcrumbs__link\">{name}</Link>\n                </li>\n                <li className=\"breadcrumbs__item\">\n                  <a href='#' className=\"breadcrumbs__link\">Add review</a>\n                </li>\n              </ul>\n            </nav>\n\n            <UserBlock />\n          </header>\n\n          <div className=\"film-card__poster film-card__poster--small\">\n            <img src={posterImage} alt={name} width=\"218\" height=\"327\"/>\n          </div>\n        </div>\n\n        <div className=\"add-review\">\n          <form action=\"#\" className=\"add-review__form\" onSubmit={handleCommentSubmit}>\n            <div className=\"rating\">\n              <RatingStars ratingStars={ratingStars} handleRatingStarsChange={handleRatingStarsChange} isDisabled={isLoading === RequestStatus.LOADING}/>\n            </div>\n\n            <div className=\"add-review__text\">\n              <textarea\n                className=\"add-review__textarea\"\n                name=\"review-text\"\n                id=\"review-text\"\n                placeholder=\"Review text\"\n                onChange={handleReviewTextChange}\n                value={reviewText}\n                minLength={MIN_COMMENT_LENGTH}\n                maxLength={MAX_COMMENT_LENGTH}\n                required\n                disabled={isLoading === RequestStatus.LOADING}\n                data-testid=\"review-text\"\n              />\n              <div className=\"add-review__submit\">\n                <button className=\"add-review__btn\" type=\"submit\" disabled={isDisabled}>Post</button>\n              </div>\n            </div>\n          </form>\n          {error && <ToastMessage message={error.message}/>}\n        </div>\n\n      </section>\n    </React.Fragment>\n  );\n}\n\nAddReview.propTypes = {\n  isLoading: PropTypes.string,\n  movies: PropTypes.arrayOf(\n    PropTypes.oneOfType(\n      [movieProp],\n    )),\n  error: PropTypes.oneOfType([string]),\n  onFormSubmitClick: PropTypes.func,\n  onPageLeave: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n  isLoading: getCommentPostRequestStatus(state),\n  movies: getMovies(state),\n  error: getCurrentMovieCommentPostError(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onFormSubmitClick(commentData) {\n    dispatch(postComment(commentData));\n  },\n  onPageLeave() {\n    dispatch(clearCommentPostError());\n  },\n});\n\nconst ConnectedAddReview = connect(mapStateToProps, mapDispatchToProps)(AddReview);\n\nexport default ConnectedAddReview;\n","import React, { useEffect, useRef, useState } from 'react';\nimport {useParams} from 'react-router-dom';\nimport SvgInjector from '../svg-injector/svg-injector';\nimport PropTypes from 'prop-types';\nimport movieProp from '../film/film.prop.js';\nimport { connect } from 'react-redux';\nimport { SECONDS_IN_HOUR, SECONDS_IN_MINUTE } from '../../const';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport {getMovies} from '../../store/selectors';\n\nconst MAX_PROGRESS_BAR_VALUE = 100;\nconst TIME_LOWER_LIMIT = 0;\nconst TIME_UPPER_LIMIT = 10;\nconst VIDEO_READY_STATE = 3;\nconst CONTROLS_VISIBILITY_TIMEOUT = 2000;\n\nconst getFormattedTime = (time) => {\n\n  const fullHours = Math.floor(- time / SECONDS_IN_HOUR);\n  const fullMinutes = Math.floor((- time - fullHours * SECONDS_IN_HOUR) / SECONDS_IN_MINUTE);\n  const fullSeconds = Math.floor(- time - fullHours * SECONDS_IN_HOUR - fullMinutes * SECONDS_IN_MINUTE);\n\n  let fullHoursFormatted;\n  let fullMinutesFormatted;\n  let fullSecondsFormatted;\n\n  if (fullHours > TIME_LOWER_LIMIT && fullHours < TIME_UPPER_LIMIT) {\n    fullHoursFormatted = `0${fullHours}`;\n  } else if (fullHours >= TIME_UPPER_LIMIT) {\n    fullHoursFormatted = `${fullHours}`;\n  } else {\n    fullHoursFormatted = '';\n  }\n\n  if (fullMinutes >= TIME_LOWER_LIMIT && fullMinutes < TIME_UPPER_LIMIT) {\n    fullMinutesFormatted = `0${fullMinutes}`;\n  } else {\n    fullMinutesFormatted = `${fullMinutes}`;\n  }\n\n  if (fullSeconds >= TIME_LOWER_LIMIT && fullSeconds < TIME_UPPER_LIMIT) {\n    fullSecondsFormatted = `0${fullSeconds}`;\n  } else {\n    fullSecondsFormatted = `${fullSeconds}`;\n  }\n\n  return `- ${fullHours === TIME_LOWER_LIMIT ? '' : `${fullHoursFormatted}:`}${fullMinutesFormatted}:${fullSecondsFormatted}`;\n};\n\nfunction Player({movies, onExitClick}) {\n\n  const { id } = useParams();\n  const {\n    name,\n    videoLink,\n    previewImage,\n  } = movies.find((movie) => movie.id === Number(id));\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentProgress, setCurrentProgress] = useState(0);\n  const [timeRemaining, setTimeRemaining] = useState(0);\n  const [isControlsVisible, setIsControlsVisible] = useState(true);\n  const [isFullScreen, setIsFullScreen] = useState(false);\n\n  const videoRef = useRef(null);\n  const containerRef = useRef(null);\n\n  const toggleFullScreen = (element) => {\n    if (!element.fullscreenElement) {\n      if (element.requestFullscreen) {\n        element.requestFullscreen();\n        element.fullscreenElement = true;\n        setIsFullScreen(true);\n        setIsControlsVisible(false);\n      } else if (element.webkitRequestFullScreen) {\n        element.webkitRequestFullScreen();\n        element.fullscreenElement = true;\n        setIsFullScreen(true);\n        setIsControlsVisible(false);\n      }\n    } else {\n      if (document.exitFullscreen) {\n        document.exitFullscreen();\n        element.fullscreenElement = false;\n        setIsFullScreen(false);\n        setIsControlsVisible(true);\n      } else if (document.webkitCancelFullScreen) {\n        document.webkitCancelFullScreen();\n        element.fullscreenElement = false;\n        setIsFullScreen(false);\n        setIsControlsVisible(true);\n      }\n    }\n  };\n\n  const handlePlayTimeUpdate = (evt) => {\n    setCurrentProgress(MAX_PROGRESS_BAR_VALUE * evt.target.currentTime / evt.target.duration);\n    setTimeRemaining(Math.round(evt.target.currentTime - evt.target.duration));\n    if (currentProgress === MAX_PROGRESS_BAR_VALUE) {\n      setIsPlaying(false);\n    }\n  };\n\n  useEffect(() => {\n    videoRef.current.onloadeddata = () => {\n      if(videoRef.current.readyState >= VIDEO_READY_STATE) {\n        setIsLoading(false);\n      }\n    };\n    videoRef.current.onplay = setIsPlaying(true);\n    videoRef.current.onpause = setIsPlaying(false);\n\n    return () => {\n      if (videoRef.current) {\n        videoRef.current = null;\n      }\n    };\n  },[videoLink]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      videoRef.current.play();\n      return;\n    }\n\n    videoRef.current.pause();\n  },[isPlaying]);\n\n  useEffect(() => {\n    let timeOut;\n\n    if (isFullScreen) {\n      window.onmousemove = () => {\n        setIsControlsVisible(true);\n        clearTimeout(timeOut);\n        timeOut = setTimeout(() => setIsControlsVisible(false), CONTROLS_VISIBILITY_TIMEOUT);\n      };\n    }\n\n    return () => {\n      window.onmousemove = null;\n      clearTimeout(timeOut);\n    };\n  },[isFullScreen]);\n\n  function onExitButtonClick() {\n    setIsPlaying(false);\n    onExitClick();\n  }\n\n  return (\n    <React.Fragment>\n      <SvgInjector />\n      <div className=\"player\" ref={containerRef}>\n        <video ref={videoRef} src={videoLink} className=\"player__video\" poster={previewImage} onTimeUpdate={handlePlayTimeUpdate} autoPlay/>\n\n        {isControlsVisible && <button type=\"button\" className=\"player__exit\" onClick={onExitButtonClick}>Exit</button>}\n        {isLoading && <LoadingScreen/>}\n        {isControlsVisible &&\n        <div className=\"player__controls\">\n          <div className=\"player__controls-row\">\n            <div className=\"player__time\">\n              <progress className=\"player__progress\" value={currentProgress} max={MAX_PROGRESS_BAR_VALUE}/>\n              <div className=\"player__toggler\" style={{left: `${currentProgress}%`}}>Toggler</div>\n            </div>\n            <div className=\"player__time-value\">{getFormattedTime(timeRemaining)}</div>\n          </div>\n\n          <div className=\"player__controls-row\">\n            <button type=\"button\" className=\"player__play\" disabled={isLoading} onClick={() => {setIsPlaying(!isPlaying);}} data-testid=\"play-pause-button\">\n              {isPlaying\n                ?\n                <>\n                  <svg viewBox=\"0 0 14 21\" width=\"14\" height=\"21\">\n                    <use xlinkHref=\"#pause\"/>\n                  </svg>\n                  <span>Pause</span>\n                </>\n                :\n                <>\n                  <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n                    <use xlinkHref=\"#play-s\"/>\n                  </svg>\n                  <span>Play</span>\n                </>}\n            </button>\n            <div className=\"player__name\">{name}</div>\n\n            <button type=\"button\" className=\"player__full-screen\" onClick={() => toggleFullScreen(containerRef.current)}>\n              <svg viewBox=\"0 0 27 27\" width=\"27\" height=\"27\">\n                <use xlinkHref=\"#full-screen\"/>\n              </svg>\n              <span>Full screen</span>\n            </button>\n          </div>\n        </div>}\n      </div>\n    </React.Fragment>\n  );\n}\n\nPlayer.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.oneOfType(\n      [movieProp],\n    )),\n  onExitClick: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n  movies: getMovies(state),\n});\n\nconst ConnectedPlayer = connect(mapStateToProps)(Player);\n\nexport default ConnectedPlayer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AppRoute, AuthorizationStatus } from '../../const.js';\nimport {getAuthorizationStatus} from '../../store/selectors';\n\nfunction PrivateRoute({path, exact, render, authorizationStatus}) {\n  return (\n    <Route path={path} exact={exact} render={(routeProps) => (\n      authorizationStatus === AuthorizationStatus.AUTH ? render(routeProps) : <Redirect to={AppRoute.SIGN_IN}/>\n    )}\n    />\n  );\n}\n\nPrivateRoute.propTypes = {\n  path: PropTypes.string,\n  exact: PropTypes.bool,\n  render: PropTypes.func,\n  authorizationStatus: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  authorizationStatus: getAuthorizationStatus(state),\n});\n\nconst ConnectedPrivateRoute = connect(mapStateToProps)(PrivateRoute);\n\nexport default ConnectedPrivateRoute;\n","import React from 'react';\nimport MainPage from '../main-page/main-page';\nimport PropTypes from 'prop-types';\nimport { Switch, Route } from 'react-router-dom';\nimport {AppRoute, RequestStatus} from '../../const';\nimport SignIn from '../sign-in/sign-in';\nimport MyList from '../my-list/my-list';\nimport Film from '../film/film';\nimport AddReview from '../add-review/add-review';\nimport Player from '../player/player';\nimport NoSuchPage from '../no-such-page/no-such-page';\nimport {connect} from 'react-redux';\nimport LoadingScreen from '../loading-screen/loading-screen.jsx';\nimport {default as PrivateRoute} from '../private-route/private-route';\nimport {getMoviesRequestStatus} from '../../store/selectors';\n\nfunction App({isLoading}) {\n\n  if (isLoading === RequestStatus.LOADING) {\n    return (\n      <LoadingScreen />\n    );\n  }\n\n  return (\n    <Switch>\n      <Route exact path={AppRoute.SIGN_IN}>\n        <SignIn />\n      </Route>\n      <Route exact path={AppRoute.MAIN}>\n        <MainPage />\n      </Route>\n      <PrivateRoute exact path={AppRoute.MY_LIST} render={() => <MyList />} />\n      <Route exact path={AppRoute.FILM_WITH_ID}>\n        <Film />\n      </Route>\n      <PrivateRoute exact path={AppRoute.ADD_REVIEW} render={({history}) =>\n        <AddReview onFormSubmitClick={(id) => history.push(`${AppRoute.FILMS}/${id}`)}/>}\n      />\n      <Route exact path={AppRoute.PLAYER} render={({history}) =>\n        <Player onExitClick={() => history.push(AppRoute.MAIN)}/>}\n      />\n      <Route>\n        <NoSuchPage />\n      </Route>\n    </Switch>\n  );\n}\n\nApp.propTypes = {\n  isLoading: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  isLoading: getMoviesRequestStatus(state),\n});\n\nconst ConnectedApp = connect(mapStateToProps)(App);\n\nexport { App };\nexport default ConnectedApp;\n","import { ActionType } from './action.js';\n\nconst initialState = {\n  currentGenre: 'All genres',\n};\n\nconst filtersReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case ActionType.SET_CURRENT_GENRE:\n      return {\n        ...state,\n        currentGenre: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport {filtersReducer};\n","import { ActionType } from './action.js';\nimport {RequestResult, RequestStatus} from '../const.js';\n\nconst initialState = {\n  requestStatus: RequestStatus.IDLE,\n  requestResult: null,\n  movies: [],\n  error: null,\n};\n\nconst moviesReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case ActionType.BEGIN_MOVIES_DATA_FETCH:\n      return {\n        ...state,\n        requestStatus: RequestStatus.LOADING,\n      };\n    case ActionType.SET_MOVIES_DATA:\n      return {\n        ...state,\n        requestStatus: RequestStatus.IDLE,\n        requestResult: RequestResult.SUCCEEDED,\n        movies: action.payload,\n      };\n    case ActionType.SET_MOVIES_ERROR:\n      return {\n        ...state,\n        requestStatus: RequestStatus.IDLE,\n        requestResult: RequestResult.FAILED,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport { moviesReducer };\n","import { ActionType } from './action.js';\nimport {RequestResult, RequestStatus} from '../const.js';\nimport {adaptMovieDataToClient} from './api-actions.js';\n\nconst initialState = {\n  currentMovieRequestStatus: RequestStatus.IDLE,\n  currentMovieRequestResult: null,\n  currentMovie: {\n    starring: [],\n  },\n  currentSimilarMovies: [],\n  currentComments: [],\n  currentMovieError: null,\n  commentPostRequestStatus: RequestStatus.IDLE,\n  commentPostRequestResult: null,\n  commentPostError: null,\n};\n\nconst currentMovieReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case ActionType.BEGIN_CURRENT_MOVIE_DATA_FETCH:\n      return {\n        ...state,\n        currentMovieRequestStatus: RequestStatus.LOADING,\n        currentMovieRequestResult: null,\n        currentMovieError: null,\n      };\n    case ActionType.SET_CURRENT_MOVIE_DATA:\n      return {\n        ...state,\n        currentMovieRequestStatus: RequestStatus.IDLE,\n        currentMovieRequestResult: RequestResult.SUCCEEDED,\n        currentMovie: adaptMovieDataToClient(action.payload[0]),\n        currentSimilarMovies: action.payload[1].map((similarMovie) => adaptMovieDataToClient(similarMovie)),\n        currentComments: action.payload[2],\n      };\n    case ActionType.SET_CURRENT_MOVIE_ERROR:\n      return {\n        ...state,\n        currentMovieRequestStatus: RequestStatus.IDLE,\n        currentMovieRequestResult: RequestResult.FAILED,\n        currentMovieError: action.payload,\n      };\n    case ActionType.CLEAR_CURRENT_MOVIE_ERROR:\n      return {\n        ...state,\n        currentMovieRequestResult: null,\n        currentMovieError: null,\n      };\n    case ActionType.BEGIN_COMMENT_POST:\n      return {\n        ...state,\n        commentPostRequestStatus: RequestStatus.LOADING,\n        commentPostRequestResult: null,\n        commentPostError: null,\n      };\n    case ActionType.SET_COMMENT_POST_DATA:\n      return {\n        ...state,\n        commentPostRequestStatus: RequestStatus.IDLE,\n        commentPostRequestResult: RequestResult.SUCCEEDED,\n        currentComments: action.payload,\n        commentPostError: null,\n      };\n    case ActionType.SET_COMMENT_POST_ERROR:\n      return {\n        ...state,\n        commentPostRequestStatus: RequestStatus.IDLE,\n        commentPostRequestResult: RequestResult.FAILED,\n        commentPostError: action.payload,\n      };\n    case ActionType.CLEAR_COMMENT_POST_ERROR:\n      return {\n        ...state,\n        commentPostRequestResult: null,\n        commentPostError: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport { currentMovieReducer };\n","import { ActionType } from './action.js';\nimport { AuthorizationStatus } from '../const.js';\n\nconst initialState = {\n  status: AuthorizationStatus.UNKNOWN,\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case ActionType.SET_AUTHORIZATION_STATUS:\n      return {\n        ...state,\n        status: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport { authReducer };\n","import { ActionType } from './action.js';\nimport { RequestResult, RequestStatus } from '../const.js';\n\nconst initialState = {\n  requestStatus: RequestStatus.IDLE,\n  requestResult: null,\n  promoMovie: {},\n  error: null,\n};\n\nconst promoMovieReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case ActionType.BEGIN_PROMO_MOVIE_DATA_FETCH:\n      return {\n        ...state,\n        requestStatus: RequestStatus.LOADING,\n      };\n    case ActionType.SET_PROMO_MOVIE_DATA:\n      return {\n        ...state,\n        requestStatus: RequestStatus.IDLE,\n        requestResult: RequestResult.SUCCEEDED,\n        promoMovie: action.payload,\n      };\n    case ActionType.SET_PROMO_MOVIE_ERROR:\n      return {\n        ...state,\n        requestStatus: RequestStatus.IDLE,\n        requestResult: RequestResult.FAILED,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport { promoMovieReducer };\n","import { ActionType } from './action.js';\nimport {RequestResult, RequestStatus} from '../const.js';\n\nconst initialState = {\n  requestStatus: RequestStatus.IDLE,\n  requestResult: null,\n  favoriteMovies: [],\n  error: null,\n  favoriteMovieRequestStatus: RequestStatus.IDLE,\n  favoriteMovieRequestResult: null,\n  favoriteMovieError: null,\n};\n\nconst favoriteMoviesReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case ActionType.BEGIN_FAVORITE_MOVIES_DATA_FETCH:\n      return {\n        ...state,\n        requestStatus: RequestStatus.LOADING,\n      };\n    case ActionType.SET_FAVORITE_MOVIES_DATA:\n      return {\n        ...state,\n        requestStatus: RequestStatus.IDLE,\n        requestResult: RequestResult.SUCCEEDED,\n        favoriteMovies: action.payload,\n      };\n    case ActionType.SET_FAVORITE_MOVIES_ERROR:\n      return {\n        ...state,\n        requestStatus: RequestStatus.IDLE,\n        requestResult: RequestResult.FAILED,\n        error: action.payload,\n      };\n    case ActionType.BEGIN_FAVORITE_MOVIE_STATUS_POST:\n      return {\n        ...state,\n        favoriteMovieRequestStatus: RequestStatus.LOADING,\n      };\n    case ActionType.SET_FAVORITE_MOVIE_STATUS_POST_DATA:\n      if (action.payload.isFavorite) {\n        return {\n          ...state,\n          favoriteMovieRequestStatus: RequestStatus.IDLE,\n          favoriteMovieRequestResult: RequestResult.SUCCEEDED,\n          favoriteMovies: [\n            ...state.favoriteMovies,\n            action.payload,\n          ],\n        };\n      } else {\n        return {\n          ...state,\n          favoriteMovieRequestStatus: RequestStatus.IDLE,\n          favoriteMovieRequestResult: RequestResult.SUCCEEDED,\n          favoriteMovies: state.favoriteMovies.filter((favoriteMovie) => favoriteMovie.id !== action.payload.id),\n        };\n      }\n    case ActionType.SET_FAVORITE_MOVIE_STATUS_POST_ERROR:\n      return {\n        ...state,\n        favoriteMovieRequestStatus: RequestStatus.IDLE,\n        favoriteMovieRequestResult: RequestResult.FAILED,\n        favoriteMovieError: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport { favoriteMoviesReducer };\n","import { combineReducers } from 'redux';\nimport { filtersReducer } from './filters-reducer';\nimport { moviesReducer } from './movies-reducer';\nimport { currentMovieReducer } from './current-movie-reducer';\nimport { authReducer } from './auth-reducer';\nimport { promoMovieReducer } from './promo-movie-reducer';\nimport { favoriteMoviesReducer } from './favorite-movies-reducer';\n\nconst rootReducer = combineReducers({\n  filters: filtersReducer,\n  movies: moviesReducer,\n  favoriteMovies: favoriteMoviesReducer,\n  promoMovie: promoMovieReducer,\n  currentMovie: currentMovieReducer,\n  authorizationStatus: authReducer,\n});\n\nexport { rootReducer };\n","import axios from 'axios';\n\nconst BACKEND_URL = 'https://7.react.pages.academy/wtw';\nconst REQUEST_TIMEOUT = 5000;\n\nconst HttpCode = {\n  UNAUTHORIZED: 401,\n};\n\nconst token = localStorage.getItem('token') ?? '';\n\nexport const createApi = (onUnauthorized) => {\n\n  const api = axios.create({\n    baseURL: BACKEND_URL,\n    timeout: REQUEST_TIMEOUT,\n    headers: {\n      'x-token': token,\n    },\n  });\n\n  const onSuccess = (response) => response;\n\n  const onFail = (err) => {\n    const {response} = err;\n\n    if (response.status === HttpCode.UNAUTHORIZED) {\n      onUnauthorized();\n    }\n\n    throw err;\n  };\n\n  api.interceptors.request.use(\n    (config) => {\n      config.headers['x-token'] = localStorage.getItem('token') ?? '';\n\n      return config;\n    },\n\n    (error) => Promise.reject(error),\n  );\n\n  api.interceptors.response.use(onSuccess, onFail);\n\n  return api;\n};\n","import {createBrowserHistory} from 'history';\n\nconst browserHistory = createBrowserHistory();\n\nexport default browserHistory;\n","import { createStore, applyMiddleware } from 'redux';\nimport { rootReducer } from './reducer.js';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { createApi } from '../services/api.js';\nimport { AuthorizationStatus } from '../const.js';\nimport { setAuthorizationStatus } from './action';\nimport { redirect } from './middlewares/redirect.js';\n\nconst api = createApi(() => store.dispatch(setAuthorizationStatus(AuthorizationStatus.NO_AUTH)));\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk.withExtraArgument(api), redirect)),\n);\n\nexport { store };\n","import {ActionType} from '../action.js';\nimport browserHistory from '../../browser-history.js';\n\nexport const redirect = (_store) => (next) => (action) => {\n  if (action.type === ActionType.REDIRECT_TO_ROUTE) {\n    browserHistory.push(action.payload);\n  }\n\n  next(action);\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport { Router } from 'react-router-dom';\nimport browserHistory from './browser-history';\nimport {checkAuthorization, fetchMoviesData, fetchPromoMovieData} from './store/api-actions';\n\nstore.dispatch(checkAuthorization());\nstore.dispatch(fetchMoviesData());\nstore.dispatch(fetchPromoMovieData());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router history={browserHistory}>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'));\n"],"sourceRoot":""}